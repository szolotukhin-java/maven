        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>

        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.7</version>
        </dependency>

# =====================================================================================================================
# How to check up to data in the jar plugin
# =====================================================================================================================

org.apache.maven.plugin.jar.AbstractJarMojo#execute
    File jarFile = createArchive();

    String classifier = getClassifier();
    if (classifier != null) {
        projectHelper.attachArtifact(getProject(), getType(), classifier, jarFile);
    } else {
        getProject().getArtifact().setFile(jarFile);
    }

org.apache.maven.plugin.jar.AbstractJarMojo#createArchive

org.apache.maven.archiver.MavenArchiver#createArchive(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.archiver.MavenArchiveConfiguration)

org.codehaus.plexus.archiver.AbstractArchiver#createArchive

org.codehaus.plexus.archiver.zip.AbstractZipArchiver#execute
    if ( ! checkForced() )
    {
        return;
    }

org.codehaus.plexus.archiver.AbstractArchiver#checkForced
    getLogger().debug( "Archive " + getDestFile() + " is uptodate." );

org.codehaus.plexus.archiver.AbstractArchiver#isUptodate
        getLogger().debug( "isUp2date: true" );